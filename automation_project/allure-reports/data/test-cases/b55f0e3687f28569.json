{"uid":"b55f0e3687f28569","name":"test_add_3_items_and_finish","fullName":"tests.test_checkout.TestCheckout#test_add_3_items_and_finish","historyId":"f338448cc987f53dc848d2073de95883","time":{"start":1753624798558,"stop":1753624798912,"duration":354},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //button[id='finish'] or @value='Finish'] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//button[id='finish'] or @value='Finish']' is not a valid XPath expression.\n  (Session info: chrome=138.0.7204.169); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidselectorexception\nStacktrace:\n0   chromedriver                        0x0000000100d8b570 cxxbridge1$str$ptr + 2731064\n1   chromedriver                        0x0000000100d83468 cxxbridge1$str$ptr + 2698032\n2   chromedriver                        0x00000001008d23f8 cxxbridge1$string$len + 90664\n3   chromedriver                        0x00000001008d80b0 cxxbridge1$string$len + 114400\n4   chromedriver                        0x00000001008da3f4 cxxbridge1$string$len + 123428\n5   chromedriver                        0x00000001008da49c cxxbridge1$string$len + 123596\n6   chromedriver                        0x00000001009192ec cxxbridge1$string$len + 381212\n7   chromedriver                        0x000000010095ab1c cxxbridge1$string$len + 649548\n8   chromedriver                        0x000000010090da0c cxxbridge1$string$len + 333884\n9   chromedriver                        0x0000000100d4e5f4 cxxbridge1$str$ptr + 2481340\n10  chromedriver                        0x0000000100d5185c cxxbridge1$str$ptr + 2494244\n11  chromedriver                        0x0000000100d2f248 cxxbridge1$str$ptr + 2353424\n12  chromedriver                        0x0000000100d52118 cxxbridge1$str$ptr + 2496480\n13  chromedriver                        0x0000000100d202f8 cxxbridge1$str$ptr + 2292160\n14  chromedriver                        0x0000000100d7200c cxxbridge1$str$ptr + 2627284\n15  chromedriver                        0x0000000100d72198 cxxbridge1$str$ptr + 2627680\n16  chromedriver                        0x0000000100d830a4 cxxbridge1$str$ptr + 2697068\n17  libsystem_pthread.dylib             0x00000001907e1f94 _pthread_start + 136\n18  libsystem_pthread.dylib             0x00000001907dcd34 thread_start + 8","statusTrace":"self = <tests.test_checkout.TestCheckout object at 0x106fe96d0>\n\n    def test_add_3_items_and_finish(self):\n        inventory_page = InventoryPage(self.driver)\n        cart_page = CartPage(self.driver)\n        checkout_page = CheckoutPage(self.driver)\n    \n        items_to_add = [\n            \"Sauce Labs Backpack\",\n            \"Sauce Labs Bolt T-Shirt\",\n            \"Sauce Labs Onesie\"\n        ]\n    \n        print(\"Step 1: Adding 3 items to the cart\")\n        for item in items_to_add:\n            inventory_page.add_item_to_cart(item)\n            print(f\"  - Added '{item}' to cart.\")\n    \n        assert inventory_page.get_cart_item_count() == len(items_to_add), \\\n            f\"Expected {len(items_to_add)} items in cart, but found {inventory_page.get_cart_item_count()}\"\n        print(\"  - Verified 3 items are in your cart\")\n    \n        print(\"Step 2: Navigating to Your Cart and Checkout...\")\n        inventory_page.click_cart_icon()\n        assert cart_page.verify_in_cart_page(), \"Failed to navigate to cart page.\"\n        print(\"  - Navigated to Cart page.\")\n    \n        for item in items_to_add:\n            assert item in cart_page.get_item_names_in_cart(), f\"Product '{item}' not found in cart.\"\n            print(f\"  - Verified '{item}' is in the cart page.\")\n    \n        cart_page.click_checkout_button()\n        assert checkout_page.verify_in_checkout_step_one(), \"Failed to navigate to checkout step one.\"\n        print(\"  - Navigated to Checkout Step One page.\")\n    \n        print(\"Step 3: Entering user information for checkout...\")\n        first_name = \"John\"\n        last_name = \"Doe\"\n        zip_code = \"70000\"\n        checkout_page.do_continue(first_name, last_name, zip_code)\n>       assert checkout_page.verify_in_checkout_step_two(), \"Failed to navigate to checkout step two (overview).\"\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_checkout.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/checkout_page.py:47: in verify_in_checkout_step_two\n    self.wait_for_element_visible(self.finish_btn)\nbase/base_page.py:39: in wait_for_element_visible\n    return WebDriverWait(self.driver, self.timeout).until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/support/expected_conditions.py:217: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10704cec0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...0001907e1f94 _pthread_start + 136\\\\n18  libsystem_pthread.dylib             0x00000001907dcd34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //button[id='finish'] or @value='Finish'] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//button[id='finish'] or @value='Finish']' is not a valid XPath expression.\nE         (Session info: chrome=138.0.7204.169); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidselectorexception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100d8b570 cxxbridge1$str$ptr + 2731064\nE       1   chromedriver                        0x0000000100d83468 cxxbridge1$str$ptr + 2698032\nE       2   chromedriver                        0x00000001008d23f8 cxxbridge1$string$len + 90664\nE       3   chromedriver                        0x00000001008d80b0 cxxbridge1$string$len + 114400\nE       4   chromedriver                        0x00000001008da3f4 cxxbridge1$string$len + 123428\nE       5   chromedriver                        0x00000001008da49c cxxbridge1$string$len + 123596\nE       6   chromedriver                        0x00000001009192ec cxxbridge1$string$len + 381212\nE       7   chromedriver                        0x000000010095ab1c cxxbridge1$string$len + 649548\nE       8   chromedriver                        0x000000010090da0c cxxbridge1$string$len + 333884\nE       9   chromedriver                        0x0000000100d4e5f4 cxxbridge1$str$ptr + 2481340\nE       10  chromedriver                        0x0000000100d5185c cxxbridge1$str$ptr + 2494244\nE       11  chromedriver                        0x0000000100d2f248 cxxbridge1$str$ptr + 2353424\nE       12  chromedriver                        0x0000000100d52118 cxxbridge1$str$ptr + 2496480\nE       13  chromedriver                        0x0000000100d202f8 cxxbridge1$str$ptr + 2292160\nE       14  chromedriver                        0x0000000100d7200c cxxbridge1$str$ptr + 2627284\nE       15  chromedriver                        0x0000000100d72198 cxxbridge1$str$ptr + 2627680\nE       16  chromedriver                        0x0000000100d830a4 cxxbridge1$str$ptr + 2697068\nE       17  libsystem_pthread.dylib             0x00000001907e1f94 _pthread_start + 136\nE       18  libsystem_pthread.dylib             0x00000001907dcd34 thread_start + 8\n\nvenv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSelectorException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1753624796581,"stop":1753624798356,"duration":1775},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_precondition","time":{"start":1753624798356,"stop":1753624798557,"duration":201},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //button[id='finish'] or @value='Finish'] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//button[id='finish'] or @value='Finish']' is not a valid XPath expression.\n  (Session info: chrome=138.0.7204.169); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidselectorexception\nStacktrace:\n0   chromedriver                        0x0000000100d8b570 cxxbridge1$str$ptr + 2731064\n1   chromedriver                        0x0000000100d83468 cxxbridge1$str$ptr + 2698032\n2   chromedriver                        0x00000001008d23f8 cxxbridge1$string$len + 90664\n3   chromedriver                        0x00000001008d80b0 cxxbridge1$string$len + 114400\n4   chromedriver                        0x00000001008da3f4 cxxbridge1$string$len + 123428\n5   chromedriver                        0x00000001008da49c cxxbridge1$string$len + 123596\n6   chromedriver                        0x00000001009192ec cxxbridge1$string$len + 381212\n7   chromedriver                        0x000000010095ab1c cxxbridge1$string$len + 649548\n8   chromedriver                        0x000000010090da0c cxxbridge1$string$len + 333884\n9   chromedriver                        0x0000000100d4e5f4 cxxbridge1$str$ptr + 2481340\n10  chromedriver                        0x0000000100d5185c cxxbridge1$str$ptr + 2494244\n11  chromedriver                        0x0000000100d2f248 cxxbridge1$str$ptr + 2353424\n12  chromedriver                        0x0000000100d52118 cxxbridge1$str$ptr + 2496480\n13  chromedriver                        0x0000000100d202f8 cxxbridge1$str$ptr + 2292160\n14  chromedriver                        0x0000000100d7200c cxxbridge1$str$ptr + 2627284\n15  chromedriver                        0x0000000100d72198 cxxbridge1$str$ptr + 2627680\n16  chromedriver                        0x0000000100d830a4 cxxbridge1$str$ptr + 2697068\n17  libsystem_pthread.dylib             0x00000001907e1f94 _pthread_start + 136\n18  libsystem_pthread.dylib             0x00000001907dcd34 thread_start + 8","statusTrace":"self = <tests.test_checkout.TestCheckout object at 0x106fe96d0>\n\n    def test_add_3_items_and_finish(self):\n        inventory_page = InventoryPage(self.driver)\n        cart_page = CartPage(self.driver)\n        checkout_page = CheckoutPage(self.driver)\n    \n        items_to_add = [\n            \"Sauce Labs Backpack\",\n            \"Sauce Labs Bolt T-Shirt\",\n            \"Sauce Labs Onesie\"\n        ]\n    \n        print(\"Step 1: Adding 3 items to the cart\")\n        for item in items_to_add:\n            inventory_page.add_item_to_cart(item)\n            print(f\"  - Added '{item}' to cart.\")\n    \n        assert inventory_page.get_cart_item_count() == len(items_to_add), \\\n            f\"Expected {len(items_to_add)} items in cart, but found {inventory_page.get_cart_item_count()}\"\n        print(\"  - Verified 3 items are in your cart\")\n    \n        print(\"Step 2: Navigating to Your Cart and Checkout...\")\n        inventory_page.click_cart_icon()\n        assert cart_page.verify_in_cart_page(), \"Failed to navigate to cart page.\"\n        print(\"  - Navigated to Cart page.\")\n    \n        for item in items_to_add:\n            assert item in cart_page.get_item_names_in_cart(), f\"Product '{item}' not found in cart.\"\n            print(f\"  - Verified '{item}' is in the cart page.\")\n    \n        cart_page.click_checkout_button()\n        assert checkout_page.verify_in_checkout_step_one(), \"Failed to navigate to checkout step one.\"\n        print(\"  - Navigated to Checkout Step One page.\")\n    \n        print(\"Step 3: Entering user information for checkout...\")\n        first_name = \"John\"\n        last_name = \"Doe\"\n        zip_code = \"70000\"\n        checkout_page.do_continue(first_name, last_name, zip_code)\n>       assert checkout_page.verify_in_checkout_step_two(), \"Failed to navigate to checkout step two (overview).\"\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_checkout.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/checkout_page.py:47: in verify_in_checkout_step_two\n    self.wait_for_element_visible(self.finish_btn)\nbase/base_page.py:39: in wait_for_element_visible\n    return WebDriverWait(self.driver, self.timeout).until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/support/expected_conditions.py:217: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10704cec0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...0001907e1f94 _pthread_start + 136\\\\n18  libsystem_pthread.dylib             0x00000001907dcd34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //button[id='finish'] or @value='Finish'] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//button[id='finish'] or @value='Finish']' is not a valid XPath expression.\nE         (Session info: chrome=138.0.7204.169); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidselectorexception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100d8b570 cxxbridge1$str$ptr + 2731064\nE       1   chromedriver                        0x0000000100d83468 cxxbridge1$str$ptr + 2698032\nE       2   chromedriver                        0x00000001008d23f8 cxxbridge1$string$len + 90664\nE       3   chromedriver                        0x00000001008d80b0 cxxbridge1$string$len + 114400\nE       4   chromedriver                        0x00000001008da3f4 cxxbridge1$string$len + 123428\nE       5   chromedriver                        0x00000001008da49c cxxbridge1$string$len + 123596\nE       6   chromedriver                        0x00000001009192ec cxxbridge1$string$len + 381212\nE       7   chromedriver                        0x000000010095ab1c cxxbridge1$string$len + 649548\nE       8   chromedriver                        0x000000010090da0c cxxbridge1$string$len + 333884\nE       9   chromedriver                        0x0000000100d4e5f4 cxxbridge1$str$ptr + 2481340\nE       10  chromedriver                        0x0000000100d5185c cxxbridge1$str$ptr + 2494244\nE       11  chromedriver                        0x0000000100d2f248 cxxbridge1$str$ptr + 2353424\nE       12  chromedriver                        0x0000000100d52118 cxxbridge1$str$ptr + 2496480\nE       13  chromedriver                        0x0000000100d202f8 cxxbridge1$str$ptr + 2292160\nE       14  chromedriver                        0x0000000100d7200c cxxbridge1$str$ptr + 2627284\nE       15  chromedriver                        0x0000000100d72198 cxxbridge1$str$ptr + 2627680\nE       16  chromedriver                        0x0000000100d830a4 cxxbridge1$str$ptr + 2697068\nE       17  libsystem_pthread.dylib             0x00000001907e1f94 _pthread_start + 136\nE       18  libsystem_pthread.dylib             0x00000001907dcd34 thread_start + 8\n\nvenv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSelectorException","steps":[],"attachments":[{"uid":"f6ae7f68805a6c03","name":"Lỗi: test_add_3_items_and_finish_failure.png","source":"f6ae7f68805a6c03.png","type":"image/png","size":61763},{"uid":"bcfcea9e2bd332eb","name":"stdout","source":"bcfcea9e2bd332eb.txt","type":"text/plain","size":619}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_precondition::0","time":{"start":1753624799062,"stop":1753624799062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1753624799062,"stop":1753624799138,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Checkout Process"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checkout"},{"name":"subSuite","value":"TestCheckout"},{"name":"host","value":"DUCs-MacBook-Air.local"},{"name":"thread","value":"87183-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checkout"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b55f0e3687f28569.json","parameterValues":[]}