{"name": "test_login_valid", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a real number, not 'dict'", "trace": "self = <Tests.login_test.TestLoginWeb object at 0x104d3d1d0>\n\n    @allure.story(\"Valid Login\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_login_valid(self):\n        login_pg = LoginPage(self.driver)\n>       login_pg.do_login(ConfigReader.get_username(), ConfigReader.get_password())\n\nTests/login_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/login_page.py:44: in do_login\n    self.enter_username(username)\nPages/login_page.py:21: in enter_username\n    username_textbox = self.wait_for_element_visible(self.username_field)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nPages/base_page.py:36: in wait_for_element_visible\n    return WebDriverWait(self.driver, self.timeout).until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84ba057e3faeedcab6c1c39f40a7b454\")>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84ba057e3faeedcab6c1c39f40a7b454\")>, timeout = {'implicit': 10, 'page_load': 30}\npoll_frequency = 0.5, ignored_exceptions = None\n\n    def __init__(\n        self,\n        driver: D,\n        timeout: float,\n        poll_frequency: float = POLL_FREQUENCY,\n        ignored_exceptions: Optional[WaitExcTypes] = None,\n    ):\n        \"\"\"Constructor, takes a WebDriver instance and timeout in seconds.\n    \n        Attributes:\n        -----------\n        driver\n            - Instance of WebDriver (Ie, Firefox, Chrome or Remote) or\n            a WebElement\n    \n        timeout\n            - Number of seconds before timing out\n    \n        poll_frequency\n            - Sleep interval between calls\n            - By default, it is 0.5 second.\n    \n        ignored_exceptions\n            - Iterable structure of exception classes ignored during calls.\n            - By default, it contains NoSuchElementException only.\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.wait import WebDriverWait\n        >>> from selenium.common.exceptions import ElementNotVisibleException\n        >>>\n        >>> # Wait until the element is no longer visible\n        >>> is_disappeared = WebDriverWait(driver, 30, 1, (ElementNotVisibleException))\n        ...     .until_not(lambda x: x.find_element(By.ID, \"someId\").is_displayed())\n        \"\"\"\n        self._driver = driver\n>       self._timeout = float(timeout)\n                        ^^^^^^^^^^^^^^\nE       TypeError: float() argument must be a string or a real number, not 'dict'\n\nvenv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:71: TypeError"}, "start": 1751982405396, "stop": 1751982405396, "uuid": "2069fa4c-3eae-45b4-a967-e458dba15c8c", "historyId": "8a24b95e892dcc639d8c68ef0eb9f6d0", "testCaseId": "8a24b95e892dcc639d8c68ef0eb9f6d0", "fullName": "Tests.login_test.TestLoginWeb#test_login_valid", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "Valid Login"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "login_test"}, {"name": "subSuite", "value": "TestLoginWeb"}, {"name": "host", "value": "DUCs-MacBook-Air.local"}, {"name": "thread", "value": "7993-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.login_test"}]}